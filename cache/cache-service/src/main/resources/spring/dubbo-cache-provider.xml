<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx.xsd
         http://www.springframework.org/schema/cache
         http://www.springframework.org/schema/cache/spring-cache.xsd
         http://www.springframework.org/schema/jdbc
         http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop.xsd
		 http://code.alibabatech.com/schema/dubbo
	     http://code.alibabatech.com/schema/dubbo/dubbo.xsd" default-autowire="byName">

    <import resource="classpath*:application-redis.xml"/>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
            <list>
                <!-- 越靠后越有效，取到最后一个有效的未知 -->
                <value>classpath:zk.properties</value>
            </list>
        </property>
    </bean>
    <context:component-scan base-package="com.mind.*">
    </context:component-scan>

    <context:annotation-config />

    <!-- provider's application name, used for tracing dependency relationship -->
    <dubbo:application name="demo-provider"/>

    <!-- use multicast registry center to export service -->
    <dubbo:registry address="zookeeper://127.0.0.1:2181"/>

    <dubbo:provider serialization="kryo" retries="2" accepts="500" threads="500" threadpool="cached" timeout="3000000"/>

    <!-- use dubbo protocol to export service on port 20880 -->
    <dubbo:protocol name="dubbo" serialization="kryo" optimizer="com.mind.cache.SerializationOptimizerImpl"/>
    <dubbo:annotation package="com.mind.cache.dubbo.DynamicDubboPortReaderImpl"/>

    <!-- declare the service interface to be exported -->
    <dubbo:service interface="com.mind.cache.facade.CacheFacade" ref="cacheFacade" version="1.0.0"  />
</beans>